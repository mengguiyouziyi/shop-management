# 多阶段构建 - 第一阶段：构建应用
FROM node:22-alpine AS builder

# 安装必要的系统依赖
RUN apk add --no-cache git

# 设置工作目录
WORKDIR /app

# 复制 package.json 和 package-lock.json
COPY package*.json ./
COPY apps/web/package*.json apps/web/

# 安装所有依赖
RUN npm ci

# 复制应用代码
COPY . .

# 重新安装依赖以解决版本冲突
RUN cd apps/web && rm -rf node_modules package-lock.json && npm install

# 构建应用（跳过TypeScript检查）
RUN cd apps/web && npx vite build

# 第二阶段：生产环境
FROM nginx:alpine AS production

# 安装必要的工具
RUN apk add --no-cache curl

# 复制 nginx 配置
COPY nginx.conf /etc/nginx/nginx.conf

# 从构建阶段复制构建产物
COPY --from=builder /app/apps/web/dist /usr/share/nginx/html

# 设置正确的权限
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/log/nginx

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# 使用 nginx 用户运行
USER nginx

# 启动 nginx
CMD ["nginx", "-g", "daemon off;"]