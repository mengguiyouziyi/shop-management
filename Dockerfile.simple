# 多阶段构建 - 第一阶段：构建应用
FROM node:18-alpine AS builder

# 安装必要的系统依赖
RUN apk add --no-cache git

# 设置工作目录
WORKDIR /app

# 复制 package.json 和 package-lock.json
COPY package*.json ./
COPY apps/web/package*.json apps/web/

# 安装所有依赖
RUN npm ci

# 复制应用代码
COPY . .

# 构建应用
RUN cd apps/web && npm run build

# 第二阶段：生产环境
FROM node:18-alpine AS production

# 安装必要的工具
RUN apk add --no-cache curl

# 设置工作目录
WORKDIR /app

# 从构建阶段复制依赖
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/apps/web/node_modules ./apps/web/node_modules
COPY --from=builder /app/apps/web/dist ./apps/web/dist

# 复制源代码
COPY --from=builder /app/apps/web/src ./apps/web/src
COPY --from=builder /app/apps/web/public ./apps/web/public
COPY --from=builder /app/apps/web/index.html ./apps/web/index.html
COPY --from=builder /app/apps/web/vite.config.ts ./apps/web/vite.config.ts

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# 启动应用
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]